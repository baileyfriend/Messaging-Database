CREATE TABLE users(
userID INTEGER NOT NULL, --for some reason uid breaks sqlplus
age INTEGER NOT NULL, --user must be above 12 to use app @TODO create a constraint for this
EMAIL VARCHAR(254) NOT NULL,--this is the max length of an email with domain
FNAME VARCHAR(35) NOT NULL,
LNAME VARCHAR(35) NOT NULL,
-- uIC1:userID is the primary key - generated by app - no two will be the same
constraint uIC1 primary key(userID)
--@TODO create constraint that requires '@' to be in the email
--@TODO create constraint that requres ''.com', '.edu' or '.gov' to be last 4 chars of email
);

Create table conversation
(
  cid integer not null,
  constraint cIC1 primary key(cid)
);

Create table message --this is a weak entity
(
  messageKey VARCHAR(200) PRIMARY KEY,  -- must have some kind of independent key
  timeSent TIMESTAMP, --not part of key, does not need to be unique
  muid INTEGER NOT NULL, --message user id - part of key
  mcid INTEGER NOT NULL, --part of key - message conversation id
  txt LONG NOT NULL, --contents of the message - contains text and cannot send a null message
  --create constraints - weak entity defined by timesent, user.uid, conversation.cid
  --constraint messagePKey primary key(timeSent),
  constraint messageFKeyUser foreign key(muid) references users(userID) ON DELETE SET NULL,
  constraint messageFKeyConversation foreign key(mcid) references conversation(cid) ON DELETE SET NULL
  --@TODO create constraint that user must be part of conversation to be able to send messages to the conversation
);

Create table media  --can only send one media per message
(
  mKey VARCHAR(200) NOT NULL, --which message is the media a part of? --media must be part of an existing message - therefore there must be a message sent at the same time by the same user in the same conversation for this constraint to be fulfilled
  fileName VARCHAR(260), --260 is max filename length - excludes extension
  fileType VARCHAR(5), --fileType (.gif, .jpg, etc) should not be more than 5 characters long
  --Constraints:
  CONSTRAINT mediaFkeyMessageID foreign key(mKey) references message(messageKey)
-- @TODO Create a new constraint that requires first character of fileType to be a '.' (if it doesn't start with . then its not a filetype)
);

Create table takesPartIn
(
  userID INTEGER not null,
  cid INTEGER not null,
--foreign keys from user and conversation
  constraint userForeignKey foreign key(userID) references users(userID),
  constraint convForeignKey foreign key(cid) references conversation(cid)
);


--@TODO create the isFriendsWith table! Must be friends with someone to start a conversation with them (create constraint in conversation to reflect this)
--@TODO create avatar profile pic table - has a 1:1 relationship with user - this table contains a list of available profile pictures - user can only pick from this list - no uploading their own pic -
